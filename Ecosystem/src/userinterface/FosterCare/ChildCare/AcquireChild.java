/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FosterCare.ChildCare;

import Business.Adopter.Adopter;
import Business.Adopter.AdopterDirectory;
import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ChildCareOrganization;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ChildCareAdoptionWorkRequest;
import Business.WorkQueue.ChildCareWorkRequest;
//import Business.WorkQueue.ChildCareAdoptionWorkRequest;
//import Business.WorkQueue.ChildCareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12013
 */
public class AcquireChild extends javax.swing.JPanel {

    /**
     * Creates new form ChildCareWorkAreaJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    Organization organization;
    UserAccount account;
    ChildCareOrganization childCareOrganization;
    ChildDirectory directory;
    Child child;
    EcoSystem business;
    AcquireChild panel;
    AdopterDirectory udirectory;
    Adopter adopter;
    Role roler;
    Network network;
      
    public AcquireChild(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, ChildDirectory directory, AdopterDirectory udirectory) {
     initComponents();
    this.userProcessContainer=userProcessContainer;
    this.account=account;
    this.business = business;
    this.childCareOrganization=(ChildCareOrganization)organization;
    this.directory = directory;
    this.udirectory = udirectory;
    
         System.out.println("directory; "+directory.toString());
    this.enterprise=enterprise;
//         valueLabel.setText(enterprise.getName());
//         orgLabel.setText(childCareOrganization.getName());
        processBtn.setEnabled(false);
    
        for(Network net: business.getNetworkList()){
      for(Enterprise ent: net.getEnterpriseDirectory().getEnterpriseList()){
          if(ent.equals(enterprise)){
              network= net;
          }
      }
  }
        
         populateAdopterTable();
//         populateChildTable();
         populateWorkRequest();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        lblOrganization = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        orgLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workTable = new javax.swing.JTable();
        processBtn = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblOrganization.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblOrganization.setText("Organisation");
        add(lblOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 100, 110, 30));

        valueLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 158, 30));

        orgLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        orgLabel.setText("<value>");
        add(orgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, 133, 30));

        workTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Doctor Name", "CC Admin", "Child ID", "Status", "Child Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 560, 90));

        processBtn.setBackground(new java.awt.Color(255, 255, 255));
        processBtn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        processBtn.setText("Process Request");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });
        add(processBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 160, 33));

        btnAssign.setBackground(new java.awt.Color(255, 255, 255));
        btnAssign.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 133, 33));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Child Id", "Child Name", "Adopter ID", "Adopter Name", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 600, 570, 90));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Process");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 630, 133, 33));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Adopter Request");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 560, 105, 24));

        lblEnterprise.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblEnterprise.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEnterprise.setText("Enterprise ");
        add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 100, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/kids 2.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 1010, 500));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("ACQUIRE CHILD ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 320, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        int selectedRow = workTable.getSelectedRow();
       if(selectedRow<0){
           JOptionPane.showMessageDialog(null, "Please select a request"); 
           return;
       }
       WorkRequest re = (WorkRequest) workTable.getValueAt(selectedRow, 0);
       for(Child ch : directory.getChildList()){
           if(ch.getChildId()==re.getChildId()){
               child=ch;
           }
       }
        ProcessAcquireChild pccwr = new ProcessAcquireChild(userProcessContainer, organization, (ChildCareWorkRequest) re, directory, child, account, business);
        this.userProcessContainer.add("ProcessChildCareWorkRequest", pccwr);
        CardLayout layout = (CardLayout)this.userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processBtnActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
       int selectedRow = workTable.getSelectedRow();
       if(selectedRow<0){
           JOptionPane.showMessageDialog(null, "Please select a request");
           return;
       }
       WorkRequest re = (WorkRequest) workTable.getValueAt(selectedRow, 0);
       re.setReceiver(account);
       re.setStatus("Pending with child care");
       populateWorkRequest();
        processBtn.setEnabled(true);
    }//GEN-LAST:event_btnAssignActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow<0){
             JOptionPane.showMessageDialog(null, "Please select a request");
            return;
        }
       
        ChildCareAdoptionWorkRequest req = (ChildCareAdoptionWorkRequest) jTable1.getValueAt(selectedRow, 0);
        req.setStatus("Approved");
        for(Child ch: directory.getChildList()){
            if(ch.getChildId()==req.getChildId()){
                ch.setStatus("Adopted by "+req.getUserName());
            }
        }
        
        
        
        populateAdopterTable();
    }//GEN-LAST:event_jButton1ActionPerformed


public void populateWorkRequest(){
    
    
    DefaultTableModel dtms = (DefaultTableModel)workTable.getModel();
       dtms.setRowCount(0);
    for(WorkRequest req : childCareOrganization.getWorkQueue().getWorkRequestList()){
     
       if(req instanceof ChildCareWorkRequest){
           
          Object[] row = new Object[dtms.getColumnCount()];
          row[0]=req;
          row[1]=req.getSender();
          row[2]=req.getReceiver();
          row[3]=req.getChildId();
          row[4]=req.getStatus();
          
          dtms.addRow(row);
           }
        
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel orgLabel;
    private javax.swing.JButton processBtn;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workTable;
    // End of variables declaration//GEN-END:variables

    public void populateAdopterTable(){
        DefaultTableModel dtms = (DefaultTableModel) jTable1.getModel();
        dtms.setRowCount(0);
        for(WorkRequest req: business.getWorkQueue().getWorkRequestList()){
            if(req instanceof ChildCareAdoptionWorkRequest){

                
                    Object[] row = new Object[dtms.getColumnCount()];
                    row[0]=req;
                    row[1]=req.getChildId();
                    row[2]= ((ChildCareAdoptionWorkRequest) req).getUserName();
                    row[3]= req.getStatus();
                    dtms.addRow(row);
                }
            
        }
        
    }
    
    

}
