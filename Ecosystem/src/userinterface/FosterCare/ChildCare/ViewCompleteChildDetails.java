/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FosterCare.ChildCare;

import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.ChildCareOrganization;
import Business.Organization.Organization;
//pjpjp import Business.Organization.Orphanage.ChildCareOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorWorkRequest;
//pjpj import Business.WorkQueue.DoctorWorkRequest;
//pjpj import Business.WorkQueue.FinanceCCWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12013
 */
public class ViewCompleteChildDetails extends javax.swing.JPanel {

    /**
     * Creates new form ViewCompleteChildDetails
     */
    JPanel userProcessContainer;
    Child child;
   UserAccount account;
    ChildCareOrganization organization;
   Enterprise enterprise;
   EcoSystem business;
   ChildDirectory directory;
       Network network;
	
    ViewCompleteChildDetails(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, ChildDirectory directory, Child child) {
          initComponents();
        this.userProcessContainer=userProcessContainer;
        this.child = child;
        this.account=account;
        this.organization=(ChildCareOrganization) organization;
        this.enterprise=enterprise;
        this.business=business;
        this.directory=directory;        
          for(Network net: business.getNetworkList()){
      for(Enterprise ent: net.getEnterpriseDirectory().getEnterpriseList()){
          if(ent.equals(enterprise)){
              network= net;
          }
      }
  }
        disableInput();
         nameTextField.setText(child.getName());
//        ageComboBox.setSelectedIndex(child.getChildAge());
//pjpj        txtDOB.setText(child.getChildAge());
        if(child.getGender().equalsIgnoreCase("Male")){
            maleRDB.setSelected(true);
        }
        else if(child.getGender().equalsIgnoreCase("female")){
            femaleRDB.setSelected(true);
        }
        jXDatePicker1.setDate(child.getRegistrationDate());
        txtMark.setText(child.getIdentificationMark());
        bpText.setText(String.valueOf(child.getBP()));
        pulseText.setText(String.valueOf(child.getPulseRate()));
        tempText.setText(String.valueOf(child.getBodytemp()));
        respRateText.setText(String.valueOf(child.getRespirationRate()));
        medicalTextArea.setText(child.getMedicalStatus());
       // imageTextField.setText(child.getImageDetails());
        displayImage();
        populaterequestTable();
        System.out.println(child.isBed()+" "+child.isTable()+" "+child.isCloset());
        
        
        
    }
    public void displayImage(){
        BufferedImage image = null; //Buffered image object
        String filename = child.getImageDetails(); //Getting the filepath and storing into the string
        
        
        try{
            image = ImageIO.read(new File(filename));  //Reading the filename and storing it in image
        }catch(Exception e){ //Generic exception if something goes wrong while reading the image
            JOptionPane.showMessageDialog(null, "File not found");
        }
       
  //Setting the image to the icon and then passing it ot he image JLabel    
  
ImageIcon icon = new ImageIcon(image);
   lblPic.setIcon(icon);
    
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator4 = new javax.swing.JSeparator();
        buttonGroup1 = new javax.swing.ButtonGroup();
        nameTextField = new javax.swing.JTextField();
        lblDOB = new javax.swing.JLabel();
        maleRDB = new javax.swing.JRadioButton();
        femaleRDB = new javax.swing.JRadioButton();
        lblGender = new javax.swing.JLabel();
        lblHeading = new javax.swing.JLabel();
        lblPic = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPersonalInfo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblMedicalInfo = new javax.swing.JLabel();
        tempText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        respRateText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicalTextArea = new javax.swing.JTextArea();
        lblRegistDate = new javax.swing.JLabel();
        lblIdenMark = new javax.swing.JLabel();
        btnRequestFunds = new javax.swing.JButton();
        requestMedicalHelpBtn = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblBP = new javax.swing.JLabel();
        bpText = new javax.swing.JTextField();
        lblPulse = new javax.swing.JLabel();
        pulseText = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        txtDOB = new javax.swing.JTextField();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        txtMark = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(50, 50));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 190, 30));

        lblDOB.setText("Age");
        add(lblDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 100, 30));

        maleRDB.setText("Male");
        maleRDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRDBActionPerformed(evt);
            }
        });
        add(maleRDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, -1, -1));

        femaleRDB.setText("Female");
        add(femaleRDB, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 100, 30));

        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 150, 30));

        lblHeading.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("View Child Details");
        add(lblHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 223, 40));
        add(lblPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 180));

        lblName.setText("Name");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 110, 30));

        lblPersonalInfo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblPersonalInfo.setText("Personal Info");
        add(lblPersonalInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 121, 20));

        jLabel7.setText("Temperature");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, -1, 27));

        lblMedicalInfo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        lblMedicalInfo.setText("Medical Info");
        add(lblMedicalInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, 143, -1));

        tempText.setMinimumSize(new java.awt.Dimension(50, 50));
        add(tempText, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 120, 70, 30));

        jLabel9.setText("Respiration Rate");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, -1, 27));

        respRateText.setMinimumSize(new java.awt.Dimension(50, 50));
        add(respRateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 70, -1));

        jLabel10.setText("Medical History:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 230, -1, 25));

        medicalTextArea.setColumns(20);
        medicalTextArea.setRows(5);
        jScrollPane1.setViewportView(medicalTextArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, 340, 110));

        lblRegistDate.setText("Registration Date");
        add(lblRegistDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 130, 30));

        lblIdenMark.setText("Identification mark");
        add(lblIdenMark, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 130, 30));

        btnRequestFunds.setText("Request Funds");
        btnRequestFunds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestFundsActionPerformed(evt);
            }
        });
        add(btnRequestFunds, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 470, 146, 30));

        requestMedicalHelpBtn.setText("Request Medical Help");
        requestMedicalHelpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestMedicalHelpBtnActionPerformed(evt);
            }
        });
        add(requestMedicalHelpBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 410, 160, 30));

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/BackIcon.png"))); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 20, 95, 30));

        lblBP.setText("BP");
        add(lblBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 120, 50, 30));

        bpText.setMinimumSize(new java.awt.Dimension(50, 50));
        add(bpText, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 120, 52, -1));

        lblPulse.setText("Pulse Rate");
        add(lblPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 170, -1, 27));

        pulseText.setMinimumSize(new java.awt.Dimension(50, 50));
        add(pulseText, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 170, 53, -1));

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Child Id", "Sender", "Receiver", "Result", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblRequest);
        if (tblRequest.getColumnModel().getColumnCount() > 0) {
            tblRequest.getColumnModel().getColumn(0).setResizable(false);
            tblRequest.getColumnModel().getColumn(1).setResizable(false);
            tblRequest.getColumnModel().getColumn(2).setResizable(false);
            tblRequest.getColumnModel().getColumn(3).setResizable(false);
            tblRequest.getColumnModel().getColumn(4).setResizable(false);
            tblRequest.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 390, 510, 104));
        add(txtDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 190, 30));
        add(jXDatePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 190, 30));
        add(txtMark, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 190, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ViewChildDetails dwjp = (ViewChildDetails) component;
        dwjp.populateChildTable();
        //dwjp.populateWorkRequest();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void requestMedicalHelpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestMedicalHelpBtnActionPerformed
     RequestMedicalHelp rqmh = new RequestMedicalHelp(userProcessContainer, account, organization, enterprise, business, directory, child);
     this.userProcessContainer.add("RequestMedicalHelp", rqmh);
     CardLayout layout = (CardLayout) this.userProcessContainer.getLayout();
     layout.next(userProcessContainer);
    }//GEN-LAST:event_requestMedicalHelpBtnActionPerformed

    private void btnRequestFundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestFundsActionPerformed
         
       String data = "";
       
       
        //System.out.println("date:"+data);
        RequestFinanceHelp rfhp = new RequestFinanceHelp(userProcessContainer,  account,  organization,  enterprise,  business,  directory, child, data);
       this.userProcessContainer.add("RequestFinanceHelp", rfhp);
       CardLayout layout = (CardLayout)userProcessContainer.getLayout();
       layout.next(userProcessContainer);
       
       
       
    }//GEN-LAST:event_btnRequestFundsActionPerformed

    private void maleRDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRDBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bpText;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequestFunds;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton femaleRDB;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator4;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblIdenMark;
    private javax.swing.JLabel lblMedicalInfo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPersonalInfo;
    private javax.swing.JLabel lblPic;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblRegistDate;
    private javax.swing.JRadioButton maleRDB;
    private javax.swing.JTextArea medicalTextArea;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField pulseText;
    private javax.swing.JButton requestMedicalHelpBtn;
    private javax.swing.JTextField respRateText;
    private javax.swing.JTable tblRequest;
    private javax.swing.JTextField tempText;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtMark;
    // End of variables declaration//GEN-END:variables

    public void disableInput(){
      txtDOB.setEnabled(false);
    femaleRDB.setEnabled(false);
      bpText.setEnabled(false);
      txtMark.setEnabled(false);
      jXDatePicker1.setEnabled(false);
      maleRDB.setEnabled(false);
      medicalTextArea.setEnabled(false);
      nameTextField.setEnabled(false);
    pulseText.setEnabled(false);
    
    respRateText.setEnabled(false);
    
    tempText.setEnabled(false);
    }
    
    public void populaterequestTable() {
        DefaultTableModel dtms = (DefaultTableModel) tblRequest.getModel();
        dtms.setRowCount(0);
        
        for(WorkRequest request: account.getWorkQueue().getWorkRequestList()){
           if(request.getChildId()==child.getChildId()){
            Object[] row = new Object[dtms.getColumnCount()];
           row[0]=request;
           row[1]=request.getChildId();
           row[2]=request.getSender();
           row[3]=request.getReceiver();
         
            System.out.println("did i print in the viewcompletechilddetaisl populate function");
           if(request instanceof DoctorWorkRequest){
             String result = ((DoctorWorkRequest) request).getTestResult();
            String remarks = ((DoctorWorkRequest) request).getRemarks();
             row[5]=remarks;
            row[4] = result == null ? "Waiting" : result;
           }
           
           
           dtms.addRow(row);
           }
        }
    }
}
