/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Donor;


import Business.Adopter.AdopterDirectory;
import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.Donor.Donor;
import Business.Donor.DonorDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DonorOrganization;
import Business.Organization.Organization;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonorWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kunjan
 */
public class DonorRequestTable extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    EcoSystem business;
    DonorOrganization donororganization;
    Donor donor;
    ChildDirectory directory;
    DonorDirectory donorDirectory;
  
    public DonorRequestTable(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business, AdopterDirectory udirectory,ChildDirectory directory,DonorDirectory donorDirectory) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.enterprise=enterprise;
        this.business = business;
        this.donororganization =(DonorOrganization) organization;
        this.directory = directory;
        this.donorDirectory= donorDirectory;
       for(Donor a: donorDirectory.getDonorsList()){
           if(a.getUsername().equals(account.getUsername())){
               donor=a;
           }
       }
        populateChildTable();
        //populateWorkRequestTable();
       
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        childTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        childTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Child Id", "Child Name", "Gender", "Age", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(childTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 980, 137));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DONATE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 250, 50));

        btnPay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPay.setText("Pay With Card");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, 150, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        int selectedRow = childTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a row from table");
            return;
        }
        Child ch = (Child) childTable.getValueAt(selectedRow, 0);
        PaymentPanel paymentJpanel = new PaymentPanel(userProcessContainer,account,donororganization,enterprise,business,directory, ch,donor);
       this.userProcessContainer.add("PaymentPanel", paymentJpanel);
       CardLayout layout = (CardLayout)this.userProcessContainer.getLayout();
       layout.next(userProcessContainer);
       
    }//GEN-LAST:event_btnPayActionPerformed
    public void populateChildTable(){

    DefaultTableModel dtms = (DefaultTableModel)childTable.getModel();
    dtms.setRowCount(0);
    for(Child child: directory.getChildList()){
        System.out.println("inside for");
        if(child.isFinancialHelp()){
          Object[] row = new Object[dtms.getColumnCount()];
            System.out.println("child"+child);
          row[0]=child;
          row[1]=child.getName();
          row[2]=child.getGender();
          row[3]=child.getChildAge();
          row[4]=child.getAmt();
          
          dtms.addRow(row);
       }
    }
    
    }
//    public void populateWorkRequestTable(){
//
//    DefaultTableModel dtms = (DefaultTableModel)workReqTable.getModel();
//    dtms.setRowCount(0);
//     for(WorkRequest req: business.getWorkQueue().getWorkRequestList()){
//            if(req instanceof DonorWorkRequest){
//               DonorWorkRequest request = (DonorWorkRequest)req;
//               if(request.getUserName().equalsIgnoreCase(account.getUsername())){
//                    Object[] row = new Object[dtms.getColumnCount()];
//                row[0]=req;
//                row[1]=req.getSender();
//                row[2]=req.getReceiver();
//                row[3]=req.getChildId();
//                String remarks = ((DonorWorkRequest)req).getRemarks();
//                row[4]=remarks;
//                String result = "";
//                //((DonorWorkRequest)req).getTestResult();
//                row[5]= result == null ? "Waiting" : result;
//                
//   
//             dtms.addRow(row);
////                
//               }
//               
//                  
//                 
//            }
//          
//        }
//    
//    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPay;
    private javax.swing.JTable childTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
